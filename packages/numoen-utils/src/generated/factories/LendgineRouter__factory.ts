/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  LendgineRouter,
  LendgineRouterInterface,
} from "../LendgineRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_uniFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FailedTransfer",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedTransferETH",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedTransferFrom",
    type: "error",
  },
  {
    inputs: [],
    name: "LivelinessError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "SlippageError",
    type: "error",
  },
  {
    inputs: [],
    name: "UnauthorizedError",
    type: "error",
  },
  {
    inputs: [],
    name: "VerifyError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lendgine",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lendgine",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountS",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "base",
            type: "address",
          },
          {
            internalType: "address",
            name: "speculative",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "baseScaleFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "speculativeScaleFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "upperBound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shares",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount0Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Min",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct LendgineRouter.BurnParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "address",
        name: "lendgine",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "base",
            type: "address",
          },
          {
            internalType: "address",
            name: "speculative",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "baseScaleFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "speculativeScaleFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "upperBound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sharesMin",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct LendgineRouter.MintParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "address",
        name: "lendgine",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "refundETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "base",
            type: "address",
          },
          {
            internalType: "address",
            name: "speculative",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "baseScaleFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "speculativeScaleFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "upperBound",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct LendgineRouter.SkimParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountMinimum",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "sweepToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV2Call",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountMinimum",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "unwrapWETH9",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162002de838038062002de883398101604081905262000034916200006f565b6001600160a01b0390811660805291821660a0521660c052620000b9565b80516001600160a01b03811681146200006a57600080fd5b919050565b6000806000606084860312156200008557600080fd5b620000908462000052565b9250620000a06020850162000052565b9150620000b06040850162000052565b90509250925092565b60805160a05160c051612ca56200014360003960008181610270015281816104210152610e8a0152600081816102c4015281816103bd0152818161075801528181610b0401528181610b5d015261189001526000818160da0152818161023c01528181611590015281816116a401528181611dd301528181611e190152611ec70152612ca56000f3fe6080604052600436106100ca5760003560e01c80634aa4a4fc11610074578063c45a01551161004e578063c45a0155146102b2578063cd321b40146102e6578063df2ab5bb146102f957600080fd5b80634aa4a4fc1461022a57806376771d4b1461025e578063ac9650d81461029257600080fd5b806310d1e85c116100a557806310d1e85c146101ef57806312210e8a1461020f57806349404b7c1461021757600080fd5b8062ee087a1461016d578063019e868b146101a457806310aa6982146101c457600080fd5b3661016857336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610166576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f74205745544839000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b005b600080fd5b61018061017b366004612356565b61030c565b604080516001600160a01b0390931683526020830191909152015b60405180910390f35b3480156101b057600080fd5b506101666101bf3660046123bc565b610743565b6101d76101d2366004612356565b610abd565b6040516001600160a01b03909116815260200161019b565b3480156101fb57600080fd5b5061016661020a366004612430565b61136c565b61016661154d565b61016661022536600461249a565b61155f565b34801561023657600080fd5b506101d77f000000000000000000000000000000000000000000000000000000000000000081565b34801561026a57600080fd5b506101d77f000000000000000000000000000000000000000000000000000000000000000081565b6102a56102a03660046124ca565b611717565b60405161019b91906125ad565b3480156102be57600080fd5b506101d77f000000000000000000000000000000000000000000000000000000000000000081565b6101666102f436600461262d565b611889565b61016661030736600461263f565b61198e565b6000808261012001354281101561034f576040517f0756982f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805160a081019091526000908061036b6020880188612681565b6001600160a01b0316815260200186602001602081019061038c9190612681565b6001600160a01b031681526020018660400135815260200186606001358152602001866080013581525090506104137f00000000000000000000000000000000000000000000000000000000000000008660000160208101906103ef9190612681565b6103ff6040890160208a01612681565b886040013589606001358a60800135611a95565b935060006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663e6a439056104536020890189612681565b61046360408a0160208b01612681565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa1580156104c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ea919061269e565b6040517f12fb162d00000000000000000000000000000000000000000000000000000000815260a088013560048201529091506000906001600160a01b038716906312fb162d90602401602060405180830381865afa158015610551573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057591906126bb565b90506001600160a01b0386166394d008ef6105986101208a016101008b01612681565b6105a660c08b013585612703565b60408051608080820183528982526001600160a01b03808a1660208085019182528486018b815233606096870190815287518f51861681850152928f0151851683890152968e015182870152948d015181850152928c015160a084015251811660c0830152915160e0820152915116610100820152610120016040516020818303038152906040526040518463ffffffff1660e01b815260040161064c93929190612716565b6020604051808303816000875af115801561066b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068f91906126bb565b94508660e001358510156106cf576040517f1a840b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0386166106eb61012089016101008a01612681565b6001600160a01b03167f2f00e3cdd69a77be7ed215ec7b2a36784dd158f921fca79ac29deffa353fe6ee878a60a00135604051610732929190918252602082015260400190565b60405180910390a350505050915091565b6000610751828401846127c2565b90506107817f00000000000000000000000000000000000000000000000000000000000000008260000151611bd7565b506040517f9ff47dc3000000000000000000000000000000000000000000000000000000008152600481018590526000903390639ff47dc390602401602060405180830381865afa1580156107da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fe91906126bb565b9050600080336001600160a01b031663a8aa1b316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610841573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610865919061269e565b6040517f9dc29fac000000000000000000000000000000000000000000000000000000008152306004820152602481018590526001600160a01b039190911690639dc29fac9060440160408051808303816000875af11580156108cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f0919061286d565b85515160208701519294509092506109089184611c45565b600061093d8386602001518760000151602001516001600160a01b03168860000151600001516001600160a01b031610611ccf565b905084602001516001600160a01b031663022c0d9f8660000151602001516001600160a01b03168760000151600001516001600160a01b0316106109815782610984565b60005b8751602081015190516001600160a01b039182169116106109a65760006109a8565b835b604080516020810182526000815290517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526109f19392913391600401612891565b600060405180830381600087803b158015610a0b57600080fd5b505af1158015610a1f573d6000803e3d6000fd5b50505050610a368560000151602001513384611c45565b604085015182610a46838b6128bf565b610a5091906128bf565b1115610a88576040517f1a840b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8451602001516060860151610ab391903385610aa4868e6128bf565b610aae91906128bf565b611dd1565b5050505050505050565b600081610120013542811015610aff576040517f0756982f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b547f0000000000000000000000000000000000000000000000000000000000000000610b306020860186612681565b610b406040870160208801612681565b866040013587606001358860800135611a95565b91506000610bad7f0000000000000000000000000000000000000000000000000000000000000000610b896020870187612681565b610b996040880160208901612681565b876040013588606001358960800135611f6a565b9050826001600160a01b031663a6afed956040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610bea57600080fd5b505af1158015610bfe573d6000803e3d6000fd5b50506040517f3b7cf69900000000000000000000000000000000000000000000000000000000815260a08701356004820152600092506001600160a01b0386169150633b7cf69990602401602060405180830381865afa158015610c66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8a91906126bb565b9050600080600080856001600160a01b031663443cb4bc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf491906128d2565b866001600160a01b0316635a76f25e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5691906128d2565b6effffffffffffffffffffffffffffff1691506effffffffffffffffffffffffffffff1691506000866001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de091906126bb565b905080600003610dfd578960c0013594508960e001359350610e2e565b610e0883878361206a565b610e13906001612703565b9450610e2082878361206a565b610e2b906001612703565b93505b8960c00135851080610e4357508960e0013584105b15610e7a576040517f1a840b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060009150506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663e6a43905610ebc60208b018b612681565b610ecc60408c0160208d01612681565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610f2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f53919061269e565b90506000806000836001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610f98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbc9190612921565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff16915061109160405180608001604052808881526020018781526020018d602001602081019061100e9190612681565b6001600160a01b03168e600001602081019061102a9190612681565b6001600160a01b03161061103e5783611040565b845b81526020018d60200160208101906110589190612681565b6001600160a01b03168e60000160208101906110749190612681565b6001600160a01b031610611088578461108a565b835b905261216e565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b038c166024820181905260a08e013560448301529194509092506323b872dd91506064016020604051808303816000875af1158015611107573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112b9190612966565b506001600160a01b03821663022c0d9f61114b60408c0160208d01612681565b6001600160a01b031661116160208d018d612681565b6001600160a01b0316106111755784611177565b855b61118760408d0160208e01612681565b6001600160a01b031661119d60208e018e612681565b6001600160a01b0316106111b157866111b3565b855b306040518060e001604052808e6001600160a01b031681526020018c6001600160a01b031681526020018f60200160208101906111f09190612681565b6001600160a01b031681526020018f60000160208101906112119190612681565b6001600160a01b031681526020018b81526020018781526020018f61010001602081019061123f9190612681565b6001600160a01b031690526040516112b69190602001600060e0820190506001600160a01b038084511683528060208501511660208401528060408501511660408401528060608501511660608401526080840151608084015260a084015160a08401528060c08501511660c08401525092915050565b6040516020818303038152906040526040518563ffffffff1660e01b81526004016112e49493929190612891565b600060405180830381600087803b1580156112fe57600080fd5b505af1158015611312573d6000803e3d6000fd5b50506040805160a08d01358152602081018990526001600160a01b038c1693503392507f5d624aa9c148153ab3446c1b154f660ee7701e549fe9b62dab7171b1c80e6fa2910160405180910390a350505050505050919050565b600061137a82840184612988565b90506113b78160600151826020015183604001516001600160a01b031684606001516001600160a01b0316106113b05786611c45565b875b611c45565b6113f18160400151826020015183604001516001600160a01b031684606001516001600160a01b0316106113eb5787611c45565b86611c45565b602081015160808201516040517fa0712d680000000000000000000000000000000000000000000000000000000081526001600160a01b039092169163a0712d68916114439160040190815260200190565b600060405180830381600087803b15801561145d57600080fd5b505af1158015611471573d6000803e3d6000fd5b505082516040517f89afcb44000000000000000000000000000000000000000000000000000000008152306004820152600093506001600160a01b0390911691506389afcb44906024016020604051808303816000875af11580156114da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114fe91906126bb565b90506115138260400151338460a00151611c45565b60c08201516001600160a01b031630146115445761154482604001518360c001518460a00151846113b291906128bf565b50505050505050565b471561155d5761155d3347612219565b565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156115df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160391906126bb565b90508281101561166f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e742057455448390000000000000000000000000000604482015260640161015d565b8015611712576040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156116f057600080fd5b505af1158015611704573d6000803e3d6000fd5b505050506117128282612219565b505050565b60608167ffffffffffffffff81111561173257611732612747565b60405190808252806020026020018201604052801561176557816020015b60608152602001906001900390816117505790505b50905060005b82811015611882576000803086868581811061178957611789612a34565b905060200281019061179b9190612a63565b6040516117a9929190612ac8565b600060405180830381855af49150503d80600081146117e4576040519150601f19603f3d011682016040523d82523d6000602084013e6117e9565b606091505b50915091508161184f5760448151101561180257600080fd5b6004810190508080602001905181019061181c9190612ad8565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015d9190612ba3565b8084848151811061186257611862612a34565b60200260200101819052505050808061187a90612bb6565b91505061176b565b5092915050565b60006118e07f00000000000000000000000000000000000000000000000000000000000000006118bc6020850185612681565b6118cc6040860160208701612681565b856040013586606001358760800135611f6a565b90506000806118f560c0850160a08601612681565b6001600160a01b0316146119185761191360c0840160a08501612681565b61191a565b305b6040517fbc25cf770000000000000000000000000000000000000000000000000000000081526001600160a01b0380831660048301529192509083169063bc25cf7790602401600060405180830381600087803b15801561197a57600080fd5b505af1158015611544573d6000803e3d6000fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa1580156119ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a1291906126bb565b905082811015611a7e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e7420746f6b656e0000000000000000000000000000604482015260640161015d565b8015611a8f57611a8f848383611c45565b50505050565b604080516001600160a01b038088166020830152861691810191909152606081018490526080810183905260a081018290526000908190889060c001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290528051602091820120611b95939290917f489fbe59416f17c10f25751d18927fc407d6587491b66f2634b9068470c227bc91017fff00000000000000000000000000000000000000000000000000000000000000815260609390931b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660018401526015830191909152603582015260550190565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018152919052805160209091012098975050505050505050565b6000611bfb8383600001518460200151856040015186606001518760800151611a95565b9050336001600160a01b03821614611c3f576040517f4fbee53800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b60006040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201528260248201526000806044836000895af1915050611c998161225e565b611a8f576040517fbfa871c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000846001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611d12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d369190612921565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150600084611d685781611d6a565b825b9050600085611d795783611d7b565b825b90506000611d8b896103e5612bee565b90506000611d998383612bee565b9050600082611daa866103e8612bee565b611db49190612703565b9050611dc08183612c34565b9750505050505050505b9392505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316148015611e125750804710155b15611f3e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015611e7257600080fd5b505af1158015611e86573d6000803e3d6000fd5b50506040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018690527f000000000000000000000000000000000000000000000000000000000000000016935063a9059cbb925060440190506020604051808303816000875af1158015611f14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f389190612966565b50611a8f565b306001600160a01b03841603611f5e57611f59848383611c45565b611a8f565b611a8f848484846122a3565b604080516001600160a01b038088166020830152861691810191909152606081018490526080810183905260a081018290526000908190889060c001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290528051602091820120611b95939290917f540dbc5265a46985a192ce701e6ceb46ad6944994803a036288976c72c25260391017fff00000000000000000000000000000000000000000000000000000000000000815260609390931b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660018401526015830191909152603582015260550190565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff858709858702925082811083820303915050806000036120c2578382816120b8576120b8612c05565b0492505050611dca565b838110612105576040517f773cc18c000000000000000000000000000000000000000000000000000000008152600481018290526024810185905260440161015d565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b600080826060015183604001516121859190612bee565b612191906103e8612bee565b90506000836000015184604001516121a991906128bf565b9050600084602001516103e86121bf9190612bee565b9050600085606001516103e86121d59190612bee565b90506103e581836121e68688612c34565b6121f09190612703565b6121fa91906128bf565b6122049190612c34565b61220f906001612703565b9695505050505050565b600080600080600085875af1905080611712576040517fe293b56b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008161226f573d6000803e3d6000fd5b3d60208114612287578015612298576000915061229d565b3d6000803e6000511515915061229d565b600191505b50919050565b60006040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526001600160a01b038416602482015282604482015260008060648360008a5af19150506123068161225e565b61233c576040517fa83c475400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b6000610140828403121561229d57600080fd5b6000610140828403121561236957600080fd5b611dca8383612343565b60008083601f84011261238557600080fd5b50813567ffffffffffffffff81111561239d57600080fd5b6020830191508360208285010111156123b557600080fd5b9250929050565b6000806000604084860312156123d157600080fd5b83359250602084013567ffffffffffffffff8111156123ef57600080fd5b6123fb86828701612373565b9497909650939450505050565b6001600160a01b038116811461241d57600080fd5b50565b803561242b81612408565b919050565b60008060008060006080868803121561244857600080fd5b853561245381612408565b94506020860135935060408601359250606086013567ffffffffffffffff81111561247d57600080fd5b61248988828901612373565b969995985093965092949392505050565b600080604083850312156124ad57600080fd5b8235915060208301356124bf81612408565b809150509250929050565b600080602083850312156124dd57600080fd5b823567ffffffffffffffff808211156124f557600080fd5b818501915085601f83011261250957600080fd5b81358181111561251857600080fd5b8660208260051b850101111561252d57600080fd5b60209290920196919550909350505050565b60005b8381101561255a578181015183820152602001612542565b50506000910152565b6000815180845261257b81602086016020860161253f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612620577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845261260e858351612563565b945092850192908501906001016125d4565b5092979650505050505050565b600060c0828403121561229d57600080fd5b60008060006060848603121561265457600080fd5b833561265f81612408565b925060208401359150604084013561267681612408565b809150509250925092565b60006020828403121561269357600080fd5b8135611dca81612408565b6000602082840312156126b057600080fd5b8151611dca81612408565b6000602082840312156126cd57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115611c3f57611c3f6126d4565b6001600160a01b038416815282602082015260606040820152600061273e6060830184612563565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff8111828210171561279957612799612747565b60405290565b60405160a0810167ffffffffffffffff8111828210171561279957612799612747565b60008183036101008112156127d657600080fd5b6127de612776565b60a08212156127ec57600080fd5b6127f461279f565b9150833561280181612408565b8252602084013561281181612408565b8060208401525060408401356040830152606084013560608301526080840135608083015281815261284560a08501612420565b602082015260c0840135604082015261286060e08501612420565b6060820152949350505050565b6000806040838503121561288057600080fd5b505080516020909101519092909150565b8481528360208201526001600160a01b038316604082015260806060820152600061220f6080830184612563565b81810381811115611c3f57611c3f6126d4565b6000602082840312156128e457600080fd5b81516effffffffffffffffffffffffffffff81168114611dca57600080fd5b80516dffffffffffffffffffffffffffff8116811461242b57600080fd5b60008060006060848603121561293657600080fd5b61293f84612903565b925061294d60208501612903565b9150604084015163ffffffff8116811461267657600080fd5b60006020828403121561297857600080fd5b81518015158114611dca57600080fd5b600060e0828403121561299a57600080fd5b60405160e0810181811067ffffffffffffffff821117156129bd576129bd612747565b60405282356129cb81612408565b815260208301356129db81612408565b602082015260408301356129ee81612408565b60408201526060830135612a0181612408565b806060830152506080830135608082015260a083013560a0820152612a2860c08401612420565b60c08201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612a9857600080fd5b83018035915067ffffffffffffffff821115612ab357600080fd5b6020019150368190038213156123b557600080fd5b8183823760009101908152919050565b600060208284031215612aea57600080fd5b815167ffffffffffffffff80821115612b0257600080fd5b818401915084601f830112612b1657600080fd5b815181811115612b2857612b28612747565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715612b6e57612b6e612747565b81604052828152876020848701011115612b8757600080fd5b612b9883602083016020880161253f565b979650505050505050565b602081526000611dca6020830184612563565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612be757612be76126d4565b5060010190565b8082028115828204841417611c3f57611c3f6126d4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082612c6a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea2646970667358221220a01eba65fc58242b118b44cfa19bcb0771c9d44c8db6095a8b49d86acbd9adfe64736f6c63430008110033";

type LendgineRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LendgineRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LendgineRouter__factory extends ContractFactory {
  constructor(...args: LendgineRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _uniFactory: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LendgineRouter> {
    return super.deploy(
      _factory,
      _uniFactory,
      _weth,
      overrides || {}
    ) as Promise<LendgineRouter>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _uniFactory: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _uniFactory,
      _weth,
      overrides || {}
    );
  }
  override attach(address: string): LendgineRouter {
    return super.attach(address) as LendgineRouter;
  }
  override connect(signer: Signer): LendgineRouter__factory {
    return super.connect(signer) as LendgineRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LendgineRouterInterface {
    return new utils.Interface(_abi) as LendgineRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LendgineRouter {
    return new Contract(address, _abi, signerOrProvider) as LendgineRouter;
  }
}

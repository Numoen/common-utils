/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  LendgineRouter,
  LendgineRouterInterface,
} from "../LendgineRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_uniFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FailedTransfer",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedTransferETH",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedTransferFrom",
    type: "error",
  },
  {
    inputs: [],
    name: "LivelinessError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "SlippageError",
    type: "error",
  },
  {
    inputs: [],
    name: "UnauthorizedError",
    type: "error",
  },
  {
    inputs: [],
    name: "VerifyError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lendgine",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lendgine",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountS",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "base",
            type: "address",
          },
          {
            internalType: "address",
            name: "speculative",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "baseScaleFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "speculativeScaleFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "upperBound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sharesMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct LendgineRouter.BurnParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "address",
        name: "lendgine",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "base",
            type: "address",
          },
          {
            internalType: "address",
            name: "speculative",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "baseScaleFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "speculativeScaleFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "upperBound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sharesMin",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct LendgineRouter.MintParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "address",
        name: "lendgine",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "refundETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "base",
            type: "address",
          },
          {
            internalType: "address",
            name: "speculative",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "baseScaleFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "speculativeScaleFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "upperBound",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct LendgineRouter.SkimParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountMinimum",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "sweepToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV2Call",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountMinimum",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "unwrapWETH9",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162002da638038062002da683398101604081905262000034916200006f565b6001600160a01b0390811660805291821660a0521660c052620000b9565b80516001600160a01b03811681146200006a57600080fd5b919050565b6000806000606084860312156200008557600080fd5b620000908462000052565b9250620000a06020850162000052565b9150620000b06040850162000052565b90509250925092565b60805160a05160c051612c63620001436000396000818161025d0152818161042101526111fc0152600081816102c4015281816103bd0152818161075801528181610eaf01528181610f08015261185801526000818160da0152818161021101528181610ce101528181610df501528181611d9b01528181611de10152611e8f0152612c636000f3fe6080604052600436106100ca5760003560e01c806376771d4b11610074578063c45a01551161004e578063c45a0155146102b2578063cd321b40146102e6578063df2ab5bb146102f957600080fd5b806376771d4b1461024b578063a85d52251461027f578063ac9650d81461029257600080fd5b806312210e8a116100a557806312210e8a146101e457806349404b7c146101ec5780634aa4a4fc146101ff57600080fd5b8062ee087a1461016d578063019e868b146101a457806310d1e85c146101c457600080fd5b3661016857336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610166576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f74205745544839000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b005b600080fd5b61018061017b36600461230b565b61030c565b604080516001600160a01b0390931683526020830191909152015b60405180910390f35b3480156101b057600080fd5b506101666101bf366004612367565b610743565b3480156101d057600080fd5b506101666101df3660046123db565b610abd565b610166610c9e565b6101666101fa366004612445565b610cb0565b34801561020b57600080fd5b506102337f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161019b565b34801561025757600080fd5b506102337f000000000000000000000000000000000000000000000000000000000000000081565b61023361028d366004612475565b610e68565b6102a56102a0366004612488565b6116df565b60405161019b919061256b565b3480156102be57600080fd5b506102337f000000000000000000000000000000000000000000000000000000000000000081565b6101666102f43660046125eb565b611851565b6101666103073660046125fd565b611956565b6000808261012001354281101561034f576040517f0756982f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805160a081019091526000908061036b602088018861263f565b6001600160a01b0316815260200186602001602081019061038c919061263f565b6001600160a01b031681526020018660400135815260200186606001358152602001866080013581525090506104137f00000000000000000000000000000000000000000000000000000000000000008660000160208101906103ef919061263f565b6103ff6040890160208a0161263f565b886040013589606001358a60800135611a5d565b935060006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663e6a43905610453602089018961263f565b61046360408a0160208b0161263f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa1580156104c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ea919061265c565b6040517f12fb162d00000000000000000000000000000000000000000000000000000000815260a088013560048201529091506000906001600160a01b038716906312fb162d90602401602060405180830381865afa158015610551573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105759190612679565b90506001600160a01b0386166394d008ef6105986101208a016101008b0161263f565b6105a660c08b0135856126c1565b60408051608080820183528982526001600160a01b03808a1660208085019182528486018b815233606096870190815287518f51861681850152928f0151851683890152968e015182870152948d015181850152928c015160a084015251811660c0830152915160e0820152915116610100820152610120016040516020818303038152906040526040518463ffffffff1660e01b815260040161064c939291906126d4565b6020604051808303816000875af115801561066b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068f9190612679565b94508660e001358510156106cf576040517f1a840b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0386166106eb61012089016101008a0161263f565b6001600160a01b03167f2f00e3cdd69a77be7ed215ec7b2a36784dd158f921fca79ac29deffa353fe6ee878a60a00135604051610732929190918252602082015260400190565b60405180910390a350505050915091565b600061075182840184612780565b90506107817f00000000000000000000000000000000000000000000000000000000000000008260000151611b9f565b506040517f9ff47dc3000000000000000000000000000000000000000000000000000000008152600481018590526000903390639ff47dc390602401602060405180830381865afa1580156107da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fe9190612679565b9050600080336001600160a01b031663a8aa1b316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610841573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610865919061265c565b6040517f9dc29fac000000000000000000000000000000000000000000000000000000008152306004820152602481018590526001600160a01b039190911690639dc29fac9060440160408051808303816000875af11580156108cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f0919061282b565b85515160208701519294509092506109089184611c0d565b600061093d8386602001518760000151602001516001600160a01b03168860000151600001516001600160a01b031610611c97565b905084602001516001600160a01b031663022c0d9f8660000151602001516001600160a01b03168760000151600001516001600160a01b0316106109815782610984565b60005b8751602081015190516001600160a01b039182169116106109a65760006109a8565b835b604080516020810182526000815290517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526109f1939291339160040161284f565b600060405180830381600087803b158015610a0b57600080fd5b505af1158015610a1f573d6000803e3d6000fd5b50505050610a368560000151602001513384611c0d565b604085015182610a46838b61287d565b610a50919061287d565b1115610a88576040517f1a840b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8451602001516060860151610ab391903385610aa4868e61287d565b610aae919061287d565b611d99565b5050505050505050565b6000610acb82840184612890565b9050610b088160600151826020015183604001516001600160a01b031684606001516001600160a01b031610610b015786611c0d565b875b611c0d565b610b428160400151826020015183604001516001600160a01b031684606001516001600160a01b031610610b3c5787611c0d565b86611c0d565b602081015160808201516040517fa0712d680000000000000000000000000000000000000000000000000000000081526001600160a01b039092169163a0712d6891610b949160040190815260200190565b600060405180830381600087803b158015610bae57600080fd5b505af1158015610bc2573d6000803e3d6000fd5b505082516040517f89afcb44000000000000000000000000000000000000000000000000000000008152306004820152600093506001600160a01b0390911691506389afcb44906024016020604051808303816000875af1158015610c2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4f9190612679565b9050610c648260400151338460a00151611c0d565b60c08201516001600160a01b03163014610c9557610c9582604001518360c001518460a0015184610b03919061287d565b50505050505050565b4715610cae57610cae3347611f32565b565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610d30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d549190612679565b905082811015610dc0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e742057455448390000000000000000000000000000604482015260640161015d565b8015610e63576040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015610e4157600080fd5b505af1158015610e55573d6000803e3d6000fd5b50505050610e638282611f32565b505050565b600081610100013542811015610eaa576040517f0756982f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610eff7f0000000000000000000000000000000000000000000000000000000000000000610edb602086018661263f565b610eeb604087016020880161263f565b866040013587606001358860800135611a5d565b91506000610f587f0000000000000000000000000000000000000000000000000000000000000000610f34602087018761263f565b610f44604088016020890161263f565b876040013588606001358960800135611f77565b9050826001600160a01b031663a6afed956040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f9557600080fd5b505af1158015610fa9573d6000803e3d6000fd5b50506040517f2e5e549e00000000000000000000000000000000000000000000000000000000815260c08701356004820152600092506001600160a01b0386169150632e5e549e90602401602060405180830381865afa158015611011573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110359190612679565b90508460a00135811115611075576040517f1a840b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600080856001600160a01b031663443cb4bc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110dd919061293c565b866001600160a01b0316635a76f25e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561111b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113f919061293c565b6effffffffffffffffffffffffffffff1691506effffffffffffffffffffffffffffff1691506000866001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c99190612679565b90506111da838b60c0013583612077565b94506111eb828b60c0013583612077565b935060009250506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016905063e6a4390561123060208b018b61263f565b61124060408c0160208d0161263f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa1580156112a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c7919061265c565b90506000806000836001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561130c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611330919061298b565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff16915061140560405180608001604052808881526020018781526020018d6020016020810190611382919061263f565b6001600160a01b03168e600001602081019061139e919061263f565b6001600160a01b0316106113b257836113b4565b845b81526020018d60200160208101906113cc919061263f565b6001600160a01b03168e60000160208101906113e8919061263f565b6001600160a01b0316106113fc57846113fe565b835b905261217b565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b038c1660248201819052604482018a90529194509092506323b872dd91506064016020604051808303816000875af1158015611478573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149c91906129d0565b506001600160a01b03821663022c0d9f6114bc60408c0160208d0161263f565b6001600160a01b03166114d260208d018d61263f565b6001600160a01b0316106114e657846114e8565b855b6114f860408d0160208e0161263f565b6001600160a01b031661150e60208e018e61263f565b6001600160a01b0316106115225786611524565b855b306040518060e001604052808e6001600160a01b031681526020018c6001600160a01b031681526020018f6020016020810190611561919061263f565b6001600160a01b031681526020018f6000016020810190611582919061263f565b6001600160a01b031681526020018f60c0013581526020018781526020018f60e00160208101906115b3919061263f565b6001600160a01b0316905260405161162a9190602001600060e0820190506001600160a01b038084511683528060208501511660208401528060408501511660408401528060608501511660608401526080840151608084015260a084015160a08401528060c08501511660c08401525092915050565b6040516020818303038152906040526040518563ffffffff1660e01b8152600401611658949392919061284f565b600060405180830381600087803b15801561167257600080fd5b505af1158015611686573d6000803e3d6000fd5b50506040805188815260c08d013560208201526001600160a01b038c1693503392507f5d624aa9c148153ab3446c1b154f660ee7701e549fe9b62dab7171b1c80e6fa2910160405180910390a350505050505050919050565b60608167ffffffffffffffff8111156116fa576116fa612705565b60405190808252806020026020018201604052801561172d57816020015b60608152602001906001900390816117185790505b50905060005b8281101561184a5760008030868685818110611751576117516129f2565b90506020028101906117639190612a21565b604051611771929190612a86565b600060405180830381855af49150503d80600081146117ac576040519150601f19603f3d011682016040523d82523d6000602084013e6117b1565b606091505b509150915081611817576044815110156117ca57600080fd5b600481019050808060200190518101906117e49190612a96565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015d9190612b61565b8084848151811061182a5761182a6129f2565b60200260200101819052505050808061184290612b74565b915050611733565b5092915050565b60006118a87f0000000000000000000000000000000000000000000000000000000000000000611884602085018561263f565b611894604086016020870161263f565b856040013586606001358760800135611f77565b90506000806118bd60c0850160a0860161263f565b6001600160a01b0316146118e0576118db60c0840160a0850161263f565b6118e2565b305b6040517fbc25cf770000000000000000000000000000000000000000000000000000000081526001600160a01b0380831660048301529192509083169063bc25cf7790602401600060405180830381600087803b15801561194257600080fd5b505af1158015610c95573d6000803e3d6000fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa1580156119b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119da9190612679565b905082811015611a46576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e7420746f6b656e0000000000000000000000000000604482015260640161015d565b8015611a5757611a57848383611c0d565b50505050565b604080516001600160a01b038088166020830152861691810191909152606081018490526080810183905260a081018290526000908190889060c001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290528051602091820120611b5d939290917f75101793d0f15301afd1b466782b6463c536dc2100e58ab9e9fa399736e60f5091017fff00000000000000000000000000000000000000000000000000000000000000815260609390931b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660018401526015830191909152603582015260550190565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018152919052805160209091012098975050505050505050565b6000611bc38383600001518460200151856040015186606001518760800151611a5d565b9050336001600160a01b03821614611c07576040517f4fbee53800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b60006040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201528260248201526000806044836000895af1915050611c6181612226565b611a57576040517fbfa871c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000846001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611cda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cfe919061298b565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150600084611d305781611d32565b825b9050600085611d415783611d43565b825b90506000611d53896103e5612bac565b90506000611d618383612bac565b9050600082611d72866103e8612bac565b611d7c91906126c1565b9050611d888183612bf2565b9750505050505050505b9392505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316148015611dda5750804710155b15611f06577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015611e3a57600080fd5b505af1158015611e4e573d6000803e3d6000fd5b50506040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018690527f000000000000000000000000000000000000000000000000000000000000000016935063a9059cbb925060440190506020604051808303816000875af1158015611edc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f0091906129d0565b50611a57565b306001600160a01b03841603611f2657611f21848383611c0d565b611a57565b611a578484848461226b565b600080600080600085875af1905080610e63576040517fe293b56b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080516001600160a01b038088166020830152861691810191909152606081018490526080810183905260a081018290526000908190889060c001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290528051602091820120611b5d939290917ffa77a504db26055d7035cfdfeca883e0470de81e30c5d93d85235cbc0606c1b191017fff00000000000000000000000000000000000000000000000000000000000000815260609390931b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660018401526015830191909152603582015260550190565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff858709858702925082811083820303915050806000036120cf578382816120c5576120c5612bc3565b0492505050611d92565b838110612112576040517f773cc18c000000000000000000000000000000000000000000000000000000008152600481018290526024810185905260440161015d565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b600080826060015183604001516121929190612bac565b61219e906103e8612bac565b90506000836000015184604001516121b6919061287d565b9050600084602001516103e86121cc9190612bac565b9050600085606001516103e86121e29190612bac565b90506103e581836121f38688612bf2565b6121fd91906126c1565b612207919061287d565b6122119190612bf2565b61221c9060016126c1565b9695505050505050565b600081612237573d6000803e3d6000fd5b3d6020811461224f5780156122605760009150612265565b3d6000803e60005115159150612265565b600191505b50919050565b60006040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526001600160a01b038416602482015282604482015260008060648360008a5af19150506122ce81612226565b612304576040517fa83c475400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b6000610140828403121561226557600080fd5b60008083601f84011261233057600080fd5b50813567ffffffffffffffff81111561234857600080fd5b60208301915083602082850101111561236057600080fd5b9250929050565b60008060006040848603121561237c57600080fd5b83359250602084013567ffffffffffffffff81111561239a57600080fd5b6123a68682870161231e565b9497909650939450505050565b6001600160a01b03811681146123c857600080fd5b50565b80356123d6816123b3565b919050565b6000806000806000608086880312156123f357600080fd5b85356123fe816123b3565b94506020860135935060408601359250606086013567ffffffffffffffff81111561242857600080fd5b6124348882890161231e565b969995985093965092949392505050565b6000806040838503121561245857600080fd5b82359150602083013561246a816123b3565b809150509250929050565b6000610120828403121561226557600080fd5b6000806020838503121561249b57600080fd5b823567ffffffffffffffff808211156124b357600080fd5b818501915085601f8301126124c757600080fd5b8135818111156124d657600080fd5b8660208260051b85010111156124eb57600080fd5b60209290920196919550909350505050565b60005b83811015612518578181015183820152602001612500565b50506000910152565b600081518084526125398160208601602086016124fd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156125de577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526125cc858351612521565b94509285019290850190600101612592565b5092979650505050505050565b600060c0828403121561226557600080fd5b60008060006060848603121561261257600080fd5b833561261d816123b3565b9250602084013591506040840135612634816123b3565b809150509250925092565b60006020828403121561265157600080fd5b8135611d92816123b3565b60006020828403121561266e57600080fd5b8151611d92816123b3565b60006020828403121561268b57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115611c0757611c07612692565b6001600160a01b03841681528260208201526060604082015260006126fc6060830184612521565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff8111828210171561275757612757612705565b60405290565b60405160a0810167ffffffffffffffff8111828210171561275757612757612705565b600081830361010081121561279457600080fd5b61279c612734565b60a08212156127aa57600080fd5b6127b261275d565b915083356127bf816123b3565b825260208401356127cf816123b3565b8060208401525060408401356040830152606084013560608301526080840135608083015281815261280360a085016123cb565b602082015260c0840135604082015261281e60e085016123cb565b6060820152949350505050565b6000806040838503121561283e57600080fd5b505080516020909101519092909150565b8481528360208201526001600160a01b038316604082015260806060820152600061221c6080830184612521565b81810381811115611c0757611c07612692565b600060e082840312156128a257600080fd5b60405160e0810181811067ffffffffffffffff821117156128c5576128c5612705565b60405282356128d3816123b3565b815260208301356128e3816123b3565b602082015260408301356128f6816123b3565b60408201526060830135612909816123b3565b806060830152506080830135608082015260a083013560a082015261293060c084016123cb565b60c08201529392505050565b60006020828403121561294e57600080fd5b81516effffffffffffffffffffffffffffff81168114611d9257600080fd5b80516dffffffffffffffffffffffffffff811681146123d657600080fd5b6000806000606084860312156129a057600080fd5b6129a98461296d565b92506129b76020850161296d565b9150604084015163ffffffff8116811461263457600080fd5b6000602082840312156129e257600080fd5b81518015158114611d9257600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612a5657600080fd5b83018035915067ffffffffffffffff821115612a7157600080fd5b60200191503681900382131561236057600080fd5b8183823760009101908152919050565b600060208284031215612aa857600080fd5b815167ffffffffffffffff80821115612ac057600080fd5b818401915084601f830112612ad457600080fd5b815181811115612ae657612ae6612705565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715612b2c57612b2c612705565b81604052828152876020848701011115612b4557600080fd5b612b568360208301602088016124fd565b979650505050505050565b602081526000611d926020830184612521565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612ba557612ba5612692565b5060010190565b8082028115828204841417611c0757611c07612692565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082612c28577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea264697066735822122056265cfba3249bfd9f30552802d65a38c1889908ef2556f061f0051ea6a8c5cd64736f6c63430008110033";

type LendgineRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LendgineRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LendgineRouter__factory extends ContractFactory {
  constructor(...args: LendgineRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _uniFactory: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LendgineRouter> {
    return super.deploy(
      _factory,
      _uniFactory,
      _weth,
      overrides || {}
    ) as Promise<LendgineRouter>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _uniFactory: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _uniFactory,
      _weth,
      overrides || {}
    );
  }
  override attach(address: string): LendgineRouter {
    return super.attach(address) as LendgineRouter;
  }
  override connect(signer: Signer): LendgineRouter__factory {
    return super.connect(signer) as LendgineRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LendgineRouterInterface {
    return new utils.Interface(_abi) as LendgineRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LendgineRouter {
    return new Contract(address, _abi, signerOrProvider) as LendgineRouter;
  }
}

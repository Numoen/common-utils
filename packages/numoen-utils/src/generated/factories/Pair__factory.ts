/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Pair, PairInterface } from "../Pair";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BalanceReturnError",
    type: "error",
  },
  {
    inputs: [],
    name: "BufferError",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedTransfer",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientInputError",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientOutputError",
    type: "error",
  },
  {
    inputs: [],
    name: "InvariantError",
    type: "error",
  },
  {
    inputs: [],
    name: "LendgineError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SpeculativeInvariantError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addBuffer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "base",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseScaleFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buffer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lendgine",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "removeBuffer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserve0",
    outputs: [
      {
        internalType: "uint120",
        name: "",
        type: "uint120",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserve1",
    outputs: [
      {
        internalType: "uint120",
        name: "",
        type: "uint120",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "speculative",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "speculativeScaleFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "upperBound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "r0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "r1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "verifyInvariant",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610160604052600280546001600160f01b0316600160f01b1790553480156200002757600080fd5b50336001600160a01b03166080816001600160a01b031681525050600080336001600160a01b0316636d9877ab6040518163ffffffff1660e01b815260040160c060405180830381865afa15801562000084573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000aa919062000158565b610100526001600160a01b0392831660e05292821660c052921660a05290925090506012821180620000dc5750600682105b15620000fb57604051636819ba0560e01b815260040160405180910390fd5b60128111806200010b5750600681105b156200012a57604051636819ba0560e01b815260040160405180910390fd5b6101209190915261014052620001be565b80516001600160a01b03811681146200015357600080fd5b919050565b60008060008060008060c087890312156200017257600080fd5b6200017d876200013b565b95506200018d602088016200013b565b94506200019d604088016200013b565b9350606087015192506080870151915060a087015190509295509295509295565b60805160a05160c05160e051610100516101205161014051611b85620002826000396000818161024d01526105de015260008181610171015261059d01526000818161030c0152818161060f015281816106570152610684015260008181610389015281816108df01528181610add0152818161102601526115990152600081816101d3015281816108b401528181610aac01528181610fea015261142f0152600081816102e5015281816104560152610e7b015260006103590152611b856000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80639f1d0f59116100b2578063bb9a590811610081578063c45a015511610066578063c45a015514610354578063edaafe201461037b578063ee1f21d81461038457600080fd5b8063bb9a59081461032e578063bc25cf771461034157600080fd5b80639f1d0f59146102ba578063a0712d68146102cd578063a39bfd13146102e0578063b09ad8a01461030757600080fd5b80635001f3b51161010957806387557ff7116100ee57806387557ff7146102485780639a4d5e211461026f5780639dc29fac1461029257600080fd5b80635001f3b5146101ce5780635a76f25e1461021a57600080fd5b806318160ddd1461013b57806322cf1989146101575780632faf67d61461016c578063443cb4bc14610193575b600080fd5b61014460005481565b6040519081526020015b60405180910390f35b61016a610165366004611824565b6103ab565b005b6101447f000000000000000000000000000000000000000000000000000000000000000081565b6002546101ae906effffffffffffffffffffffffffffff1681565b6040516effffffffffffffffffffffffffffff909116815260200161014e565b6101f57f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161014e565b6002546101ae906f0100000000000000000000000000000090046effffffffffffffffffffffffffffff1681565b6101447f000000000000000000000000000000000000000000000000000000000000000081565b61028261027d36600461183d565b61056c565b604051901515815260200161014e565b6102a56102a036600461188d565b610709565b6040805192835260208301919091520161014e565b61016a6102c83660046118b7565b6109b5565b61016a6102db366004611824565b610c00565b6101f57f000000000000000000000000000000000000000000000000000000000000000081565b6101447f000000000000000000000000000000000000000000000000000000000000000081565b61016a61033c366004611824565b610dd0565b61016a61034f3660046118ea565b610efa565b6101f57f000000000000000000000000000000000000000000000000000000000000000081565b61014460015481565b6101f57f000000000000000000000000000000000000000000000000000000000000000081565b6002547e01000000000000000000000000000000000000000000000000000000000000900461ffff1660011461040d576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e020000000000000000000000000000000000000000000000000000000000001790557f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1633146104c3576040517fb3491a6e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000546001546104d39083611934565b111561050b576040517feecc2bbd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001600082825461051d9190611934565b9091555050600280547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e0100000000000000000000000000000000000000000000000000000000000017905550565b6000816000036105895783158015610582575082155b9050610702565b60006105c8610598868561109e565b6105c37f0000000000000000000000000000000000000000000000000000000000000000600a611a67565b61109e565b905060006106046105d9868661109e565b6105c37f0000000000000000000000000000000000000000000000000000000000000000600a611a67565b9050816000610633837f00000000000000000000000000000000000000000000000000000000000000006110b3565b9050600060046106448560026110bf565b61064e9190611aa2565b9050600061067d7f000000000000000000000000000000000000000000000000000000000000000060026110bf565b90506106aa7f00000000000000000000000000000000000000000000000000000000000000006002611add565b8511156106e3576040517ff80926d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106ed8183611934565b6106f78486611934565b101596505050505050505b9392505050565b6000806002601e9054906101000a900461ffff1661ffff1660011461075a576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280547e020000000000000000000000000000000000000000000000000000000000007dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82161791829055600080546effffffffffffffffffffffffffffff928316936f01000000000000000000000000000000900490921691906107df84888461111f565b905060006107ee84898561111f565b9050811580156107fc575080155b15610833576040517fd5ab59fe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108546108408387611af4565b61084a8387611af4565b61027d8b87611af4565b61088a576040517f6819ba0500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61089388611228565b6108af6108a08387611af4565b6108aa8387611af4565b61124b565b6108da7f00000000000000000000000000000000000000000000000000000000000000008a846112d7565b6109057f00000000000000000000000000000000000000000000000000000000000000008a836112d7565b604080518381526020810183905290810189905273ffffffffffffffffffffffffffffffffffffffff8a169033907fd175a80c109434bb89948928ab2475a6647c94244cb70002197896423c8833639060600160405180910390a3600280547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e01000000000000000000000000000000000000000000000000000000000000179055909890975095505050505050565b6002547e01000000000000000000000000000000000000000000000000000000000000900461ffff16600114610a17576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e0200000000000000000000000000000000000000000000000000000000000017905581158015610a6a575080155b15610aa1576040517fd5ab59fe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8115610ad257610ad27f000000000000000000000000000000000000000000000000000000000000000084846112d7565b8015610b0357610b037f000000000000000000000000000000000000000000000000000000000000000084836112d7565b600080610b0e611374565b91509150610b1f828260005461056c565b610b55576040517f6819ba0500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b5f828261124b565b604080518581526020810185905273ffffffffffffffffffffffffffffffffffffffff87169133917f2a9237ff5aa599ef4c5ee4b1142b53429d5755e2685fe6288b2e3320202115f5910160405180910390a35050600280547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e01000000000000000000000000000000000000000000000000000000000000179055505050565b6002547e01000000000000000000000000000000000000000000000000000000000000900461ffff16600114610c62576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e020000000000000000000000000000000000000000000000000000000000001790556000819003610ce4576040517fd5ab59fe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080610cef611374565b91509150610d0682826000548661027d9190611934565b610d3c576040517f6819ba0500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d4583611684565b610d4f828261124b565b60405183815233907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968859060200160405180910390a25050600280547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e0100000000000000000000000000000000000000000000000000000000000017905550565b6002547e01000000000000000000000000000000000000000000000000000000000000900461ffff16600114610e32576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e020000000000000000000000000000000000000000000000000000000000001790557f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163314610ee8576040517fb3491a6e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001600082825461051d9190611af4565b6002547e01000000000000000000000000000000000000000000000000000000000000900461ffff16600114610f5c576040517f29f745a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280547e020000000000000000000000000000000000000000000000000000000000007dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821617918290556effffffffffffffffffffffffffffff908116916f01000000000000000000000000000000900416600080610fd9611374565b9150915083821115611019576110197f0000000000000000000000000000000000000000000000000000000000000000866110148786611af4565b6112d7565b82811115611050576110507f0000000000000000000000000000000000000000000000000000000000000000866110148685611af4565b5050600280547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e01000000000000000000000000000000000000000000000000000000000000179055505050565b600061070283670de0b6b3a76400008461111f565b600061070283836116a5565b60008082600116116110d957670de0b6b3a76400006110db565b825b9050600182901c91505b8115611119576110f583846116a5565b9250600182161561110d5761110a81846116a5565b90505b600182901c91506110e5565b92915050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff858709858702925082811083820303915050806000036111775783828161116d5761116d611a73565b0492505050610702565b8381106111bf576040517f773cc18c00000000000000000000000000000000000000000000000000000000815260048101829052602481018590526044015b60405180910390fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b806001600082825461123a9190611af4565b909155505060008054919091039055565b611254826117bc565b600280547fffffffffffffffffffffffffffffffffff000000000000000000000000000000166effffffffffffffffffffffffffffff9290921691909117905561129d816117bc565b6002600f6101000a8154816effffffffffffffffffffffffffffff02191690836effffffffffffffffffffffffffffff1602179055505050565b60006040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201528260248201526000806044836000895af1915050611338816117df565b61136e576040517fbfa871c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b604080518082018252601281527f62616c616e63654f662861646472657373290000000000000000000000000000602091820152815130602480830191909152835180830390910181526044909101835290810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f70a082310000000000000000000000000000000000000000000000000000000017905290516000918291829160609173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169161145991611b07565b600060405180830381855afa9150503d8060008114611494576040519150601f19603f3d011682016040523d82523d6000602084013e611499565b606091505b5090925090508115806114ad575060208151105b156114e4576040517f7613bc8900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000818060200190518101906114fa9190611b36565b604080518082018252601281527f62616c616e63654f662861646472657373290000000000000000000000000000602091820152815130602480830191909152835180830390910181526044909101835290810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f70a082310000000000000000000000000000000000000000000000000000000017905290519192507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16916115d99190611b07565b600060405180830381855afa9150503d8060008114611614576040519150601f19603f3d011682016040523d82523d6000602084013e611619565b606091505b50909350915082158061162d575060208251105b15611664576040517f7613bc8900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80828060200190518101906116799190611b36565b945094505050509091565b806000808282546116959190611934565b9091555050600180549091019055565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848609848602925082811083820303915050670de0b6b3a76400008110611720576040517fd31b3402000000000000000000000000000000000000000000000000000000008152600481018290526024016111b6565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff821190508260000361175e5780670de0b6b3a7640000850401945050505050611119565b6204000082850304939091119091037d40000000000000000000000000000000000000000000000000000000000002919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b806effffffffffffffffffffffffffffff811681146117da57600080fd5b919050565b6000816117f0573d6000803e3d6000fd5b3d60208114611808578015611819576000915061181e565b3d6000803e6000511515915061181e565b600191505b50919050565b60006020828403121561183657600080fd5b5035919050565b60008060006060848603121561185257600080fd5b505081359360208301359350604090920135919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146117da57600080fd5b600080604083850312156118a057600080fd5b6118a983611869565b946020939093013593505050565b6000806000606084860312156118cc57600080fd5b6118d584611869565b95602085013595506040909401359392505050565b6000602082840312156118fc57600080fd5b61070282611869565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561111957611119611905565b600181815b808511156119a057817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561198657611986611905565b8085161561199357918102915b93841c939080029061194c565b509250929050565b6000826119b757506001611119565b816119c457506000611119565b81600181146119da57600281146119e457611a00565b6001915050611119565b60ff8411156119f5576119f5611905565b50506001821b611119565b5060208310610133831016604e8410600b8410161715611a23575081810a611119565b611a2d8383611947565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115611a5f57611a5f611905565b029392505050565b600061070283836119a8565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082611ad8577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b808202811582820484141761111957611119611905565b8181038181111561111957611119611905565b6000825160005b81811015611b285760208186018101518583015201611b0e565b506000920191825250919050565b600060208284031215611b4857600080fd5b505191905056fea2646970667358221220913c950e39ede4b5cbf03c0377adf38a91a54785ec0973322144d660924c7feb64736f6c63430008110033";

type PairConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PairConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Pair__factory extends ContractFactory {
  constructor(...args: PairConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Pair> {
    return super.deploy(overrides || {}) as Promise<Pair>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Pair {
    return super.attach(address) as Pair;
  }
  override connect(signer: Signer): Pair__factory {
    return super.connect(signer) as Pair__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PairInterface {
    return new utils.Interface(_abi) as PairInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Pair {
    return new Contract(address, _abi, signerOrProvider) as Pair;
  }
}
